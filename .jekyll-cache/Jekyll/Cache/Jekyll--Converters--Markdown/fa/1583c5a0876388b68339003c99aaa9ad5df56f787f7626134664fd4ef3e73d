I"U<p>Function are one of the most important component of any programming language. Function is basically a block of code that you want to use repeatidly. Function have two major things.</p>

<ul>
  <li>Function Declaration</li>
  <li>Function Call</li>
</ul>

<p>Function is declared initially and later on it is called whenever needed. There are two main types of functions,</p>

<ul>
  <li>Built-in Functions</li>
  <li>User-defined Functions</li>
</ul>

<p>Built-in functions are prebuild in language and we use them by giving a simple function call. The most common example of built-in function is <code class="language-plaintext highlighter-rouge">var_dump()</code>. Secondly the user-defined functions are defined by user himself. The syntax of defining a function in php is very simple. You simple have to write <code class="language-plaintext highlighter-rouge">function</code> keyword then <code class="language-plaintext highlighter-rouge">function_name</code> and after it you write small parenthesis <code class="language-plaintext highlighter-rouge">()</code> and following it comes the pair of curly braces <code class="language-plaintext highlighter-rouge">{}</code>.</p>

<p>There are multiple functions if you categorize them on the basis of their functionality. Iâ€™m listing some of them,</p>

<ul>
  <li>Built-in Function</li>
  <li>User-defined Function</li>
  <li>Simple Function</li>
  <li>Returning Value Function</li>
  <li>Anonymous Function</li>
  <li>Parameterize Function</li>
  <li>Variable Function</li>
</ul>

<p>Now let us see an example of how a user-defined function look like and how it works. Keep in mind that after function declaration, you must have to give a function call inorder to use that function. Also, you can call other functions in a function. But do condition calling else you might get stuck in infinite loop. Here is a simple example of multiple function calls and a function call within a function.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php

function test(){
    echo "function test";    
}


test(); //function call
test();
test();
test();
?&gt;

&lt;?php
function dummy(){
    echo "&lt;h1&gt;User Details&lt;/h1&gt;";
}

function displayUserDetails(){
    dummy();
    echo "Username is SANDY";
    echo "&lt;br/&gt;";
    echo "User age is 27";
    echo "&lt;br/&gt;";
    echo "User email id is sandy@test.com";
    echo "&lt;hr/&gt;";
}

displayUserDetails();
displayUserDetails();
?&gt;
</code></pre></div></div>

<h2 id="parameterized-function">Parameterized Function</h2>

<p>Parameterized functions are used where you want to pass some value and perform operations on it. The values are recieved in the variables defined in the <code class="language-plaintext highlighter-rouge">()</code> of function. Here is a small demonstration of it.</p>

<p><img src="/assets/images/clt/all-about-php-functions/1.png" alt="1" /></p>

<p>Iâ€™ve also written some example code for better understanding.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php

function sum($a,$b){
    echo $a+$b;
    echo "&lt;br/&gt;";
}

sum(20,50);
sum(100,200);
sum(23,76);

?&gt;
</code></pre></div></div>

<p>Here is another example in which iâ€™m using html within php,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php

function userData($name,$color){
    echo "&lt;h1 style='color:$color'&gt;$name&lt;/h1&gt;";
}

userData('sandy','green');
userData('andy','red');
userData('peter','orange');

?&gt;
</code></pre></div></div>
:ET