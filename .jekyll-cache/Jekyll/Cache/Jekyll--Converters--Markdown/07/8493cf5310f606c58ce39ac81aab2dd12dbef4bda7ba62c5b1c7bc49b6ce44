I"Ý<p>The working of a Artificial Neural Network can be observed in multiple ways. One way is to solve a practical use-case on it. The problem we are going to solve today is Customer-Churn problem of a Bank<code class="language-plaintext highlighter-rouge">(will the customer stay or go)</code>.</p>

<p>For this purpose, iâ€™m going to use the available dataset on kaggle. Here is the link to <a href="https://www.kaggle.com/code/campusx/notebook8ad570467f">Churn Dataset</a> and also iâ€™m going to use the notebook provided by kaggle.</p>

<p>Initially we are importing the necessary libraries including numpy and pandas. Then we are obtaining the path to the dataset csv file.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the read-only "../input/" directory
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using "Save &amp; Run All" 
# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session
</code></pre></div></div>

<p>Now read the data in the form of pandas dataframe,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>df=pd.read_csv('/kaggle/input/credit-card-customer-churn-prediction/Churn_Modelling.csv')
</code></pre></div></div>

<p>Observe the dataset by using these functions,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>df.describe()
</code></pre></div></div>

<p>Dataset information will be displayed.</p>

:ET