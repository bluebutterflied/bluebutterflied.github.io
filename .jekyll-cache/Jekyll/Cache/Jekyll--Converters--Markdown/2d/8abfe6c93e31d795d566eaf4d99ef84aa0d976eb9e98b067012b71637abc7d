I"<p>Lets talk about the operators. Operators are used between the operands to perform any type of operation. Like there are many operators available in various programming languages.</p>

<p>PHP also have a wide variety of operators. Some of them are:</p>
<ul>
  <li>
    <p>Arithematic Operator</p>
  </li>
  <li>
    <p>Assignment Operator</p>
  </li>
  <li>
    <p>Comparison Operator</p>
  </li>
  <li>
    <p>Increment/Decrement Operator</p>
  </li>
  <li>
    <p>logical Operator</p>
  </li>
  <li>
    <p>String Operator</p>
  </li>
  <li>
    <p>Array Operator</p>
  </li>
</ul>

<p>Arithematic operators are the most common one. They include <strong>additon, subtraction, multiplication, division e.t.c</strong>. Also there are some comparision operators which perform the comparison. Here is an example of basic arithematic operation of addition,</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php
$a=5;
$b=6;
echo $a+$b;
?&gt;
</code></pre></div></div>
<p>Also below is an another example in which we are using comparison operator <code class="language-plaintext highlighter-rouge">==</code>.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php
$a=10;
$b=10;
echo $a==$b;
?&gt;
</code></pre></div></div>

<h2 id="arithematic-operations">Arithematic Operations</h2>

<p>Above was the general overview of operations. Now iâ€™m going to perform multiple arithematic operation using php code.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php
$a=20;
$b=10;
echo $a+$b;
echo "&lt;br&gt;";
echo $a-$b;
echo "&lt;br&gt;";
echo $a/$b;
echo "&lt;br&gt;";
echo $a*$b;
echo "&lt;br&gt;";
echo $a%$b;
echo "&lt;br&gt;";
echo $a**$b;
echo "&lt;br&gt;";

const num1=20;
const num2=30;
echo num1*num2;
echo "&lt;br&gt;";

echo 10*10;
echo "&lt;br&gt;";
?&gt;
</code></pre></div></div>
<p>The output of the above php code will be,
<img src="/assets/images/clt/operators-in-php/1.png" alt="1" /></p>

<h2 id="assignment-operator">Assignment Operator</h2>

<p>Now we will talk about the assignment operator. It is used to assign values. You can look at the chart below for better understanding.</p>

<p><img src="/assets/images/clt/operators-in-php/2.png" alt="" /></p>

<p>Also iâ€™ve written an example code, in which iâ€™ve solved all of the above types,</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php
$a=5;
$b=20;

$a=$b;

$a=$a+$b;
$a+=$b;

$a-=$b;
$a=$a-$b;

$a=$a*$b;
$a*=$b;

$a=$a/$b;
$a/=$b;

$a=$a%$b;
$a%=$b;

$a=$a**$b;
$a**=$b;

echo $a;
?&gt;
</code></pre></div></div>

<h2 id="comparison-operator">Comparison Operator</h2>

<p>There are also multiple comparison operators in php. Iâ€™m attaching a chart for better understanding.
<img src="/assets/images/clt/operators-in-php/3.png" alt="3" /></p>

<p>First if we talk about <strong>Equal</strong> operator. It simply return bool if condition is satisfied.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- Value Comparison  --&gt;

&lt;?php
$a=10;
$b=10;
$c="10";

var_dump($a==$c);
?&gt;
</code></pre></div></div>

<p>Then weâ€™ve <strong>Identical</strong> operator. It also check whether the type of comparison operands is also same or not.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- Type Checking Comparison --&gt;

&lt;?php
$a=10;
$b=10;
$c="10";

var_dump($a===$c);
?&gt;
</code></pre></div></div>

<p>Then weâ€™ve <strong>Not Equal To</strong>  operator. It return boolean value on the basis of whether condition is satisfied or not.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- Not Equal To Operator --&gt;

&lt;?php
$a=10;
$b=10;
$c="10";
$d=5;


var_dump($a!=$d);
?&gt;
</code></pre></div></div>

<p>There is another way to write <strong>Not Equal To</strong> operator.</p>
:ET