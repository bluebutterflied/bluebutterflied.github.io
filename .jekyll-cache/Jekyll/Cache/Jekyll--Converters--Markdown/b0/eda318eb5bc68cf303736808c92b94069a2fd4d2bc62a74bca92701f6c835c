I"á!<p>Lets talk about the operators. Operators are used between the operands to perform any type of operation. Like the other programming languages, php also have a wide variety of operators which are used for multiple purpose. The basic syntax of operators is almost same like the other programming languages. In this blog iâ€™ll share the complete details of all types of operators used in php.</p>

<p>Php operators are as follow:</p>

<ul>
  <li>
    <p>Arithematic Operator</p>
  </li>
  <li>
    <p>Assignment Operator</p>
  </li>
  <li>
    <p>Comparison Operator</p>
  </li>
  <li>
    <p>Increment/Decrement Operator</p>
  </li>
  <li>
    <p>logical Operator</p>
  </li>
  <li>
    <p>String Operator</p>
  </li>
  <li>
    <p>Array Operator</p>
  </li>
</ul>

<p>Arithematic operators are the most common one. They include <strong>additon, subtraction, multiplication, division e.t.c</strong>. Also there are some comparision operators which perform the comparison. Here is an example of basic arithematic operation of addition,</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php
$a=5;
$b=6;
echo $a+$b;
?&gt;
</code></pre></div></div>
<p>Also below is an another example in which we are using comparison operator <code class="language-plaintext highlighter-rouge">==</code>.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php
$a=10;
$b=10;
echo $a==$b;
?&gt;
</code></pre></div></div>

<h2 id="arithematic-operator">Arithematic Operator</h2>

<p>Above was the general overview of operations. Now iâ€™m going to perform multiple arithematic operation using php code.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php
$a=20;
$b=10;
echo $a+$b;
echo "&lt;br&gt;";
echo $a-$b;
echo "&lt;br&gt;";
echo $a/$b;
echo "&lt;br&gt;";
echo $a*$b;
echo "&lt;br&gt;";
echo $a%$b;
echo "&lt;br&gt;";
echo $a**$b;
echo "&lt;br&gt;";

const num1=20;
const num2=30;
echo num1*num2;
echo "&lt;br&gt;";

echo 10*10;
echo "&lt;br&gt;";
?&gt;
</code></pre></div></div>
<p>The output of the above php code will be,
<img src="/assets/images/clt/operators-in-php/1.png" alt="1" /></p>

<h2 id="assignment-operator">Assignment Operator</h2>

<p>Now we will talk about the assignment operator. It is used to assign values. You can look at the chart below for better understanding.</p>

<p><img src="/assets/images/clt/operators-in-php/2.png" alt="" /></p>

<p>Also iâ€™ve written an example code, in which iâ€™ve solved all of the above types,</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php
$a=5;
$b=20;

$a=$b;

$a=$a+$b;
$a+=$b;

$a-=$b;
$a=$a-$b;

$a=$a*$b;
$a*=$b;

$a=$a/$b;
$a/=$b;

$a=$a%$b;
$a%=$b;

$a=$a**$b;
$a**=$b;

echo $a;
?&gt;
</code></pre></div></div>

<h2 id="comparison-operator">Comparison Operator</h2>

<p>There are also multiple comparison operators in php. Iâ€™m attaching a chart for better understanding.
<img src="/assets/images/clt/operators-in-php/3.png" alt="3" /></p>

<p>First if we talk about <strong>Equal</strong> operator. It simply return bool if condition is satisfied.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- Value Comparison  --&gt;

&lt;?php
$a=10;
$b=10;
$c="10";

var_dump($a==$c);
?&gt;
</code></pre></div></div>

<p>Then weâ€™ve <strong>Identical</strong> operator. It also check whether the type of comparison operands is also same or not.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- Type Checking Comparison --&gt;

&lt;?php
$a=10;
$b=10;
$c="10";

var_dump($a===$c);
?&gt;
</code></pre></div></div>

<p>Then weâ€™ve <strong>Not Equal To</strong>  operator. It return boolean value on the basis of whether condition is satisfied or not.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- Not Equal To Operator --&gt;

&lt;?php
$a=10;
$b=10;
$c="10";
$d=5;


var_dump($a!=$d);
?&gt;
</code></pre></div></div>

<p>There is another way to write <strong>Not Equal To</strong> operator.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- Second Way of Not Equal To --&gt;

&lt;?php
$a=10;
$b=10;
$c="10";

var_dump($a&lt;&gt;$c);
?&gt;

</code></pre></div></div>

<p>Then weâ€™ve <strong>Not Identical</strong> operator. It also do comparison and check the type of both operands being compared.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- Not Identical Operator--&gt;

&lt;?php
$a=10;
$b=10;
$c="10";

var_dump($a!==$c);
?&gt;
</code></pre></div></div>
<p>The next is <strong>Greater Than</strong> operator. It result boolean value if the <code class="language-plaintext highlighter-rouge">$a is greater than $b</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- Greater Than Operator --&gt;

&lt;?php
$a=10;
$b=10;
$c="10";

var_dump($a&gt;$c);
?&gt;
</code></pre></div></div>

<p><strong>Less Than</strong> operator is the inverse of <strong>Greater Than</strong> operator.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- Less Than Operator --&gt;

&lt;?php
$a=10;
$b=10;
$c="10";

var_dump($a&lt;$c);
?&gt;
</code></pre></div></div>

<p>The final one is the <strong>Spaceship Operator</strong>. Spaceship operator returns -1 if $a is less than c. It will return 0 if $a==$c and it will return 1 if $a&lt;$c;</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- Spaceship Operator --&gt;

&lt;?php
$a=10;
$b=10;
$c="10";

var_dump($a&lt;=&gt;$c);

/*
Spaceship operator returns -1 if $a is less than c. It will return 0 if $a==$c and it will return 1 if $a&lt;$c;
*/

?&gt;
</code></pre></div></div>

<h2 id="increment-and-decrement-operators">Increment and Decrement Operators</h2>

<p>The increment and decrement operatos can be used in two ways,</p>
<ul>
  <li>Pre</li>
  <li>Post</li>
</ul>

<p>An overview chart is attached below,
<img src="/assets/images/clt/operators-in-php/4.png" alt="4" /></p>

<p>Example of <strong>Pre-Increment</strong> operator is,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- Pre-Increment --&gt;

&lt;?php
$a=10;
echo ++$a;
?&gt;

</code></pre></div></div>

<p>Example of <strong>Post-Increment</strong> operator is,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- Post-Increment --&gt;

&lt;?php
$a=10;
echo $a++;
?&gt;
</code></pre></div></div>

<p>Example of <strong>Pre-Decrement</strong> operator is,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- Pre-Decrement --&gt;

&lt;?php
$a=10;
echo --$a;
?&gt;
</code></pre></div></div>

<p>Example of <strong>Post-Decrement</strong> operator is,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!-- Post-Decrement --&gt;

&lt;?php
$a=10;
echo $a--;
?&gt;
</code></pre></div></div>

<h2 id="strings-and-string-operators-in-php">Strings and String Operators in PHP</h2>

<p>Strings is a any combination of words, letters or symbols enclosed in quotations <code class="language-plaintext highlighter-rouge">''</code>. You can store the string inside a variable or you can print in directly. In alongside the strings, there are two string operators.</p>

<ul>
  <li>Dot Operator</li>
  <li>Dot Assignment Operator</li>
</ul>

<p>Initially if we talk about the dot operator, it is used to write variable values with strings or to write multiple string one after another,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
&lt;?php
$name='SANDY';
$age=22;
echo "My name is " .$name . "&lt;br&gt;";
echo "My age is " .$age;
echo "My name is " .$name. ' and my age is ' .$age;
?&gt;
</code></pre></div></div>

<p>The second dot assignment operator is used to concatenate one string to the other,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php
$str="Hello How are you? ";
$str1="My name is SANDY";
$str.=$str1;
echo '&lt;br&gt;';
echo $str;
?&gt;
</code></pre></div></div>

:ET