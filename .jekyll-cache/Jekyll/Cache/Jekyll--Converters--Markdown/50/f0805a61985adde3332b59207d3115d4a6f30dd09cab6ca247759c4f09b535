I"A<p>Just like the other data structures, <strong>STACK</strong> has multiple applications. Here is one of them for the evaluation of <strong>post-fix</strong> Expression. Below is the code, take a look at it,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#include&lt;iostream&gt;
using namespace std;
#define size 100
class Stack{
    private:
    int top;
    int arr[size];
    public:
        Stack(){
            top=-1;
            int arr[size];
        }
        void push(int val){
            if(top&gt;(size-1)){
                cout&lt;&lt;"Stack Overflow Occured";
            }
            else{
                top++;
                arr[top]=val;
            }
        }
        int pop(){
            int item;
            if(top&lt;0){
                
                cout&lt;&lt;"Stack Overflowed Occur";
            }
            else{
                item=arr[top];
                top--;
                return item;
            }
        }
        int peek(){
            if(top&lt;(size-1) &amp;&amp; top&gt;=0){
                int x=arr[top];
                return x;
            }
            else{
                cout&lt;&lt;"Stack is Empty";
            }
        }
        void EvaluatePostFix(char postfix[]){
            int i;
            char ch;
            int val;
            int A,B;
            for(int i=0;postfix[i]!=')';i++){
                ch=postfix[i];
                if(isdigit(ch)){
                    push(ch-'0');
                }
                else if(ch=='+'||ch=='-'||ch=='*'||ch=='/'){
                    A=pop();
                    B=pop();
                    switch(ch){
                        case '*':
                        val=B*A;
                        break;
                        case '-':
                        val=B-A;
                        break;
                        case '/':
                        val=B/A;
                        break;
                        case '+':
                        val=B+A;
                        break;
                    }
                    push(val);
                }
            }
            cout&lt;&lt;"The result of the expression is: "&lt;&lt;pop();
        }
        void isEmpty(){
            if(top==-1){
                cout&lt;&lt;"Stack is Empty ";
            }
        }
        void display(){
            if(top!=-1){
                for(int i=top;i&gt;-1;i--){
                    cout&lt;&lt;arr[i]&lt;&lt;" ";
                }
            }
        }
};
int main(){
    Stack s1;
    int i;
    char ch[size];
    cout&lt;&lt;"Enter the expression inside the character array: ";
    for(int i=0;i&lt;=size;i++){
        cin&gt;&gt;ch[i];
        if(ch[i]==')'){
            break;
        }
    }
    s1.EvaluatePostFix(ch);
    return 0;
}
</code></pre></div></div>
:ET